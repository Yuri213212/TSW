#define icoCount 153
enum icoEnum{
	ICO_Null=-1,
	ICO_Background,
	ICO_Life,
	ICO_Attack,
	ICO_Defend,
	ICO_Gold,
	ICO_CellTag,
	ICO_Explosion,
	ICO_BraveMan,
	ICO_Thief,
	ICO_Princess,
	ICO_OldMan,
	ICO_Merchant,
	ICO_AltarW,
	ICO_AltarC,
	ICO_AltarE,
	ICO_Road,
	ICO_UpStair,
	ICO_DownStair,
	ICO_Wall,
	ICO_FakeWall,
	ICO_FakeRoad,
	ICO_RedDoor,
	ICO_BlueDoor,
	ICO_YellowDoor,
	ICO_SteelGate,
	ICO_IronGate,
	ICO_Lava,
	ICO_Star,
	ICO_GreenSlime,
	ICO_RedSlime,
	ICO_Bat,
	ICO_Priest,
	ICO_SkeletonC,
	ICO_SkeletonB,
	ICO_GateKeeperC,
	ICO_SkeletonA,
	ICO_BigSlime,
	ICO_BigBat,
	ICO_Zombie,
	ICO_SuperionPriest,
	ICO_Rock,
	ICO_ZombieKnight,
	ICO_Vampire,
	ICO_SlimeMan,
	ICO_GhostSoldier,
	ICO_Soldier,
	ICO_GateKeeperB,
	ICO_Swordsman,
	ICO_Knight,
	ICO_GoldenKnight,
	ICO_SlimeLord,
	ICO_VampireBat,
	ICO_MagicianB,
	ICO_MagicianA,
	ICO_MagicSergeant,
	ICO_DarkKnight,
	ICO_GateKeeperA,
	ICO_GiantOctopusNW,
	ICO_GiantOctopusN,
	ICO_GiantOctopusNE,
	ICO_GiantOctopusW,
	ICO_GiantOctopusC,
	ICO_GiantOctopusE,
	ICO_GiantOctopusSW,
	ICO_GiantOctopusS,
	ICO_GiantOctopusSE,
	ICO_DragonNW,
	ICO_DragonN,
	ICO_DragonNE,
	ICO_DragonW,
	ICO_DragonC,
	ICO_DragonE,
	ICO_DragonSW,
	ICO_DragonS,
	ICO_DragonSE,
	ICO_GreatMagicMaster,
	ICO_Zeno,
	ICO_RedKey,
	ICO_BlueKey,
	ICO_YellowKey,
	ICO_RedElixir,
	ICO_BlueElixir,
	ICO_RedCrystal,
	ICO_BlueCrystal,
	ICO_IronSword,
	ICO_SilverSword,
	ICO_SwordOfKnight,
	ICO_HolySword,
	ICO_SacredSword,
	ICO_IronShield,
	ICO_SilverShield,
	ICO_ShieldOfKnight,
	ICO_HolyShield,
	ICO_SacredShield,
	ICO_OrbOfHero,
	ICO_OrbOfWisdom,
	ICO_OrbOfFlying,
	ICO_Cross,
	ICO_MagicElixir,
	ICO_MagicMattock,
	ICO_DestructibleBall,
	ICO_WarpStaff,
	ICO_WingsToFlyUp,
	ICO_WingsToFlyDown,
	ICO_DragonSlayer,
	ICO_SnowCrystal,
	ICO_MagicKey,
	ICO_SuperMagicMattock,
	ICO_LuckyGold,
	ICO_LifeT,
	ICO_AttackT,
	ICO_DefendT,
	ICO_GoldT,
	ICO_DamageT,
	ICO_RedKeyT,
	ICO_BlueKeyT,
	ICO_YellowKeyT,
	ICO_LifeP,
	ICO_AttackP,
	ICO_DefendP,
	ICO_GoldP,
	ICO_RedKeyP,
	ICO_BlueKeyP,
	ICO_YellowKeyP,
	ICO_RedElixirP,
	ICO_BlueElixirP,
	ICO_RedCrystalP,
	ICO_BlueCrystalP,
	ICO_IronSwordP,
	ICO_SilverSwordP,
	ICO_SwordOfKnightP,
	ICO_HolySwordP,
	ICO_SacredSwordP,
	ICO_IronShieldP,
	ICO_SilverShieldP,
	ICO_ShieldOfKnightP,
	ICO_HolyShieldP,
	ICO_SacredShieldP,
	ICO_OrbOfHeroP,
	ICO_OrbOfWisdomP,
	ICO_OrbOfFlyingP,
	ICO_CrossP,
	ICO_MagicElixirP,
	ICO_MagicMattockP,
	ICO_DestructibleBallP,
	ICO_WarpStaffP,
	ICO_WingsToFlyUpP,
	ICO_WingsToFlyDownP,
	ICO_DragonSlayerP,
	ICO_SnowCrystalP,
	ICO_MagicKeyP,
	ICO_SuperMagicMattockP,
	ICO_LuckyGoldP,
};

const wchar_t icoPath[icoCount][64]={
	L"./res/background/Background.bmp",
	L"./res/background/Life.bmp",
	L"./res/background/Attack.bmp",
	L"./res/background/Defend.bmp",
	L"./res/background/Gold.bmp",
	L"./res/character/CellTag.bmp",
	L"./res/character/Explosion.bmp",
	L"./res/character/BraveMan.bmp",
	L"./res/character/Thief.bmp",
	L"./res/character/Princess.bmp",
	L"./res/character/OldMan.bmp",
	L"./res/character/Merchant.bmp",
	L"./res/character/AltarW.bmp",
	L"./res/character/AltarC.bmp",
	L"./res/character/AltarE.bmp",
	L"./res/terrain/Road.bmp",
	L"./res/terrain/UpStair.bmp",
	L"./res/terrain/DownStair.bmp",
	L"./res/terrain/Wall.bmp",
	L"./res/terrain/FakeWall.bmp",
	L"./res/terrain/FakeRoad.bmp",
	L"./res/terrain/RedDoor.bmp",
	L"./res/terrain/BlueDoor.bmp",
	L"./res/terrain/YellowDoor.bmp",
	L"./res/terrain/SteelGate.bmp",
	L"./res/terrain/IronGate.bmp",
	L"./res/terrain/Lava.bmp",
	L"./res/terrain/Star.bmp",
	L"./res/enemy/1/GreenSlime.bmp",
	L"./res/enemy/1/RedSlime.bmp",
	L"./res/enemy/1/Bat.bmp",
	L"./res/enemy/1/Priest.bmp",
	L"./res/enemy/1/SkeletonC.bmp",
	L"./res/enemy/1/SkeletonB.bmp",
	L"./res/enemy/1/GateKeeperC.bmp",
	L"./res/enemy/1/SkeletonA.bmp",
	L"./res/enemy/2/BigSlime.bmp",
	L"./res/enemy/2/BigBat.bmp",
	L"./res/enemy/2/Zombie.bmp",
	L"./res/enemy/2/SuperionPriest.bmp",
	L"./res/enemy/2/Rock.bmp",
	L"./res/enemy/2/ZombieKnight.bmp",
	L"./res/enemy/2/Vampire.bmp",
	L"./res/enemy/4/SlimeMan.bmp",
	L"./res/enemy/4/GhostSoldier.bmp",
	L"./res/enemy/4/Soldier.bmp",
	L"./res/enemy/4/GateKeeperB.bmp",
	L"./res/enemy/4/Swordsman.bmp",
	L"./res/enemy/4/Knight.bmp",
	L"./res/enemy/4/GoldenKnight.bmp",
	L"./res/enemy/5/SlimeLord.bmp",
	L"./res/enemy/5/VampireBat.bmp",
	L"./res/enemy/5/MagicianB.bmp",
	L"./res/enemy/5/MagicianA.bmp",
	L"./res/enemy/5/MagicSergeant.bmp",
	L"./res/enemy/5/DarkKnight.bmp",
	L"./res/enemy/5/GateKeeperA.bmp",
	L"./res/enemy/octopus/GiantOctopusNW.bmp",
	L"./res/enemy/octopus/GiantOctopusN.bmp",
	L"./res/enemy/octopus/GiantOctopusNE.bmp",
	L"./res/enemy/octopus/GiantOctopusW.bmp",
	L"./res/enemy/octopus/GiantOctopusC.bmp",
	L"./res/enemy/octopus/GiantOctopusE.bmp",
	L"./res/enemy/octopus/GiantOctopusSW.bmp",
	L"./res/enemy/octopus/GiantOctopusS.bmp",
	L"./res/enemy/octopus/GiantOctopusSE.bmp",
	L"./res/enemy/dragon/DragonNW.bmp",
	L"./res/enemy/dragon/DragonN.bmp",
	L"./res/enemy/dragon/DragonNE.bmp",
	L"./res/enemy/dragon/DragonW.bmp",
	L"./res/enemy/dragon/DragonC.bmp",
	L"./res/enemy/dragon/DragonE.bmp",
	L"./res/enemy/dragon/DragonSW.bmp",
	L"./res/enemy/dragon/DragonS.bmp",
	L"./res/enemy/dragon/DragonSE.bmp",
	L"./res/enemy/GreatMagicMaster.bmp",
	L"./res/enemy/Zeno.bmp",
	L"./res/item/RedKey.bmp",
	L"./res/item/BlueKey.bmp",
	L"./res/item/YellowKey.bmp",
	L"./res/item/RedElixir.bmp",
	L"./res/item/BlueElixir.bmp",
	L"./res/item/RedCrystal.bmp",
	L"./res/item/BlueCrystal.bmp",
	L"./res/item/weapon/IronSword.bmp",
	L"./res/item/weapon/SilverSword.bmp",
	L"./res/item/weapon/SwordOfKnight.bmp",
	L"./res/item/weapon/HolySword.bmp",
	L"./res/item/weapon/SacredSword.bmp",
	L"./res/item/armor/IronShield.bmp",
	L"./res/item/armor/SilverShield.bmp",
	L"./res/item/armor/ShieldOfKnight.bmp",
	L"./res/item/armor/HolyShield.bmp",
	L"./res/item/armor/SacredShield.bmp",
	L"./res/item/treasure/OrbOfHero.bmp",
	L"./res/item/treasure/OrbOfWisdom.bmp",
	L"./res/item/treasure/OrbOfFlying.bmp",
	L"./res/item/treasure/Cross.bmp",
	L"./res/item/treasure/MagicElixir.bmp",
	L"./res/item/treasure/MagicMattock.bmp",
	L"./res/item/treasure/DestructibleBall.bmp",
	L"./res/item/treasure/WarpStaff.bmp",
	L"./res/item/treasure/WingsToFlyUp.bmp",
	L"./res/item/treasure/WingsToFlyDown.bmp",
	L"./res/item/treasure/DragonSlayer.bmp",
	L"./res/item/treasure/SnowCrystal.bmp",
	L"./res/item/treasure/MagicKey.bmp",
	L"./res/item/treasure/SuperMagicMattock.bmp",
	L"./res/item/treasure/LuckyGold.bmp",
	L"./res/panel/LifeT.bmp",
	L"./res/panel/AttackT.bmp",
	L"./res/panel/DefendT.bmp",
	L"./res/panel/GoldT.bmp",
	L"./res/panel/DamageT.bmp",
	L"./res/panel/RedKeyT.bmp",
	L"./res/panel/BlueKeyT.bmp",
	L"./res/panel/YellowKeyT.bmp",
	L"./res/panel/LifeP.bmp",
	L"./res/panel/AttackP.bmp",
	L"./res/panel/DefendP.bmp",
	L"./res/panel/GoldP.bmp",
	L"./res/panel/item/RedKeyP.bmp",
	L"./res/panel/item/BlueKeyP.bmp",
	L"./res/panel/item/YellowKeyP.bmp",
	L"./res/panel/item/RedElixirP.bmp",
	L"./res/panel/item/BlueElixirP.bmp",
	L"./res/panel/item/RedCrystalP.bmp",
	L"./res/panel/item/BlueCrystalP.bmp",
	L"./res/panel/weapon/IronSwordP.bmp",
	L"./res/panel/weapon/SilverSwordP.bmp",
	L"./res/panel/weapon/SwordOfKnightP.bmp",
	L"./res/panel/weapon/HolySwordP.bmp",
	L"./res/panel/weapon/SacredSwordP.bmp",
	L"./res/panel/armor/IronShieldP.bmp",
	L"./res/panel/armor/SilverShieldP.bmp",
	L"./res/panel/armor/ShieldOfKnightP.bmp",
	L"./res/panel/armor/HolyShieldP.bmp",
	L"./res/panel/armor/SacredShieldP.bmp",
	L"./res/panel/treasure/OrbOfHeroP.bmp",
	L"./res/panel/treasure/OrbOfWisdomP.bmp",
	L"./res/panel/treasure/OrbOfFlyingP.bmp",
	L"./res/panel/treasure/CrossP.bmp",
	L"./res/panel/treasure/MagicElixirP.bmp",
	L"./res/panel/treasure/MagicMattockP.bmp",
	L"./res/panel/treasure/DestructibleBallP.bmp",
	L"./res/panel/treasure/WarpStaffP.bmp",
	L"./res/panel/treasure/WingsToFlyUpP.bmp",
	L"./res/panel/treasure/WingsToFlyDownP.bmp",
	L"./res/panel/treasure/DragonSlayerP.bmp",
	L"./res/panel/treasure/SnowCrystalP.bmp",
	L"./res/panel/treasure/MagicKeyP.bmp",
	L"./res/panel/treasure/SuperMagicMattockP.bmp",
	L"./res/panel/treasure/LuckyGoldP.bmp",
};

HICO ico[icoCount];

wchar_t *loadIcons(){
	HICO hico;
	int i,j;

	for (i=0;i<icoCount;++i){
		hico=ico_load(icoPath[i]);
		if (!hico){
			for (j=i;j;--j){
				ico_delete(ico[j]);
			}
			return (wchar_t *)icoPath[i];
		}
		ico[i]=hico;
	}
	return NULL;
}

void destroyIcons(){
	int i;

	for (i=0;i<icoCount;++i){
		ico_delete(ico[i]);
	}
}
